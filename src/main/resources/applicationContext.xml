<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<!-- Database -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="jdbcUrl">
			<value>jdbc:mysql://localhost:3306/stock</value>
		</property>
		<property name="user">
			<value>root</value>
		</property>
		<property name="password">
			<value>821220</value>
		</property>
	</bean>

	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation" value="classpath:sql-map-config.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- DAO -->
	<bean id="articleDAO" class="com.jiangjianan.stock.server.dao.impl.ArticleDAOImpl">
		<property name="sqlMapClient" ref="sqlMapClient" />
	</bean>

	<bean id="blogDAO" class="com.jiangjianan.stock.server.dao.impl.BlogDAOImpl">
		<property name="sqlMapClient" ref="sqlMapClient" />
	</bean>

	<bean id="stockInfoDAO" class="com.jiangjianan.stock.server.dao.impl.StockInfoDAOImpl">
		<property name="sqlMapClient" ref="sqlMapClient" />
	</bean>

	<bean id="stockPriceDAO" class="com.jiangjianan.stock.server.dao.impl.StockPriceDAOImpl">
		<property name="sqlMapClient" ref="sqlMapClient" />
	</bean>

	<bean id="stockAttentionDAO"
		class="com.jiangjianan.stock.server.dao.impl.StockAttentionDAOImpl">
		<property name="sqlMapClient" ref="sqlMapClient" />
	</bean>

	<bean id="stockAnnouncementDAO"
		class="com.jiangjianan.stock.server.dao.impl.StockAnnouncementDAOImpl">
		<property name="sqlMapClient" ref="sqlMapClient" />
	</bean>

	<bean id="stockReportDAO"
		class="com.jiangjianan.stock.server.dao.impl.StockReportDAOImpl">
		<property name="sqlMapClient" ref="sqlMapClient" />
	</bean>
	
	<bean id="userDAO"
		class="com.jiangjianan.stock.server.dao.impl.UserDAOImpl">
		<property name="sqlMapClient" ref="sqlMapClient" />
	</bean>

	<!-- Manager -->
	<bean id="sinaOpenApiManager"
		class="com.jiangjianan.stock.server.manager.impl.SinaOpenApiManagerImpl" />

	<bean id="sinaBlogSpiderManager"
		class="com.jiangjianan.stock.server.manager.impl.SinaBlogSpiderManagerImpl" />

	<bean id="messageManager"
		class="com.jiangjianan.stock.server.manager.impl.MessageManagerImpl" />

	<bean id="stockAnalyzerSpiderManager"
		class="com.jiangjianan.stock.server.manager.impl.StockAnalyzerSpiderManagerImpl" />

	<bean id="stockAnnouncementSpiderManager"
		class="com.jiangjianan.stock.server.manager.impl.StockAnnouncementSpiderManagerImpl">
	</bean>

	<bean id="mailSenderManager"
		class="com.jiangjianan.stock.server.manager.impl.MailSenderManagerImpl">
		<property name="javaMailSender" ref="javaMailSender" />
		<property name="velocityEngine" ref="velocityEngine" />
	</bean>

	<!-- Service -->
	<bean id="stockInfoService"
		class="com.jiangjianan.stock.server.service.impl.StockInfoServiceImpl">
		<property name="stockAnalyzerSpiderManager" ref="stockAnalyzerSpiderManager" />
		<property name="stockInfoDAO" ref="stockInfoDAO" />
	</bean>
	
	<bean id="stockAttentionService"
		class="com.jiangjianan.stock.server.service.impl.StockAttentionServiceImpl">
		<property name="stockAnalyzerSpiderManager" ref="stockAnalyzerSpiderManager" />
		<property name="stockAttentionDAO" ref="stockAttentionDAO" />
	</bean>

	<bean id="stockAnnouncementService"
		class="com.jiangjianan.stock.server.service.impl.StockAnnouncementServiceImpl">
		<property name="stockAnnouncementSpiderManager" ref="stockAnnouncementSpiderManager" />
		<property name="stockAnnouncementDAO" ref="stockAnnouncementDAO" />
		<property name="stockInfoDAO" ref="stockInfoDAO" />
		<property name="stockAttentionDAO" ref="stockAttentionDAO" />
	</bean>

	<bean id="blogService"
		class="com.jiangjianan.stock.server.service.impl.BlogServiceImpl">
		<property name="sinaOpenApiManager" ref="sinaOpenApiManager" />
		<property name="sinaBlogSpiderManager" ref="sinaBlogSpiderManager" />
		<property name="blogDAO" ref="blogDAO" />
		<property name="articleDAO" ref="articleDAO" />
	</bean>

	<bean id="userService"
		class="com.jiangjianan.stock.server.service.impl.UserServiceImpl">
		<property name="userDAO" ref="userDAO" />
	</bean>

	<bean id="stockAnalyzerService"
		class="com.jiangjianan.stock.server.service.impl.StockAnalyzerServiceImpl">
		<property name="stockAnalyzerSpiderManager" ref="stockAnalyzerSpiderManager" />
		<property name="stockInfoDAO" ref="stockInfoDAO" />
		<property name="stockPriceDAO" ref="stockPriceDAO" />
		<property name="stockReportDAO" ref="stockReportDAO" />
	</bean>

	<bean id="scheduleService"
		class="com.jiangjianan.stock.server.service.impl.ScheduleServiceImpl">
		<property name="blogService" ref="blogService" />
		<property name="stockAnnouncementService" ref="stockAnnouncementService" />
	</bean>

	<!-- Util -->
	<bean id="springUtil" class="com.jiangjianan.stock.server.util.SpringUtil" />

	<!-- Schedule -->
	<bean id="updateArticleJobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="scheduleService" />
		<property name="targetMethod" value="udpateArticle" />
	</bean>

	<bean id="updateArticleTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="updateArticleJobDetail" />
		</property>
		<property name="cronExpression">
			<value>0 0 2 * * ?</value>
		</property>
	</bean>

	<bean id="updateStockAnnouncementJobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="scheduleService" />
		<property name="targetMethod" value="udpateStockAnnouncement" />
	</bean>

	<bean id="updateStockAnnouncementTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="updateStockAnnouncementJobDetail" />
		</property>
		<property name="cronExpression">
			<value>0 0 3 * * ?</value>
		</property>
	</bean>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="updateArticleTrigger" />
				<ref bean="updateStockAnnouncementTrigger" />
			</list>
		</property>
	</bean>

	<!-- Email -->
	<bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host">
			<value>smtp.gmail.com</value>
		</property>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.timeout">25000</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory </prop>
				<prop key="mail.smtp.socketFactory.fallback">false</prop>
			</props>
		</property>
		<property name="port">
			<value>465</value>
		</property>
		<property name="username">
			<value>stock.jiangjianan@gmail.com</value>
		</property>
		<property name="password">
			<value>jja821220$</value>
		</property>
	</bean>

	<!-- Velocity -->
	<bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="resourceLoaderPath">
			<value>/velocity</value>
		</property>
		<property name="velocityProperties">
			<props>
				<prop key="velocimacro.library"></prop>
				<prop key="default.contentType">text/html; charset=utf-8</prop>
				<prop key="output.encoding">utf-8</prop>
				<prop key="input.encoding">utf-8</prop>
			</props>
		</property>
	</bean>
</beans>